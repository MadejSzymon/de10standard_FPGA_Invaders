`include "define.v"
module sprite_controller_enemy #(parameter SPR_X, SPR_W, SPR_H, SPR_SCA) 
(clk, rst_n, pixel, line, addr, rden);
	
	input clk;
	input rst_n;
	input [`CORDW-1:0] pixel;
	input [`CORDW-1:0] line;
	input [9:0] enemy_y;
	
	output reg [15:0] addr;
	output rden;
	
	reg [6:0] counter_p;
	reg [6:0] counter_l;
	
	initial begin
		addr <= 1'b0;
		counter_p <= 1'b0;
		counter_l <= 1'b0;
	end
	
	assign rden = (pixel >= SPR_X-2 && pixel <= SPR_X + SPR_SCA*SPR_W-3 && line >= enemy_y && line < enemy_y + SPR_SCA*SPR_H) ? 1'b1: 1'b0;
	
	always @(posedge clk) begin
		if(line == 1)
			addr <= 0;
		if(rst_n == 1'b0) begin
			addr <= 1'b0;
		end
		else if(rden == 1'b1 && counter_p == SPR_SCA-1) begin
			addr <= addr + 1'b1;
		end
		
		if (rden == 1'b1) begin
			counter_p <= counter_p + 1;
		end
		
		if (pixel == SPR_X + SPR_SCA*SPR_W-2 && line >= enemy_y && line < enemy_y + SPR_SCA* SPR_H) begin
			counter_l <= counter_l + 1;
			counter_p <= 0;
		end
		
		if (pixel == SPR_X + SPR_SCA*SPR_W-1 && line >= enemy_y && line < enemy_y + SPR_SCA*SPR_H && counter_l != SPR_SCA) begin
			addr <= addr - SPR_W;
		end
		
		if (line == enemy_y + SPR_SCA*SPR_H || counter_l == SPR_SCA) begin
			counter_l <= 0;
		end
		
		if (counter_p == SPR_SCA-1) begin
			counter_p <= 0;
		end
		
	end
	
	
	
endmodule 